service: candidate-service

provider:
  name: aws
  runtime: nodejs8.10
  stage: dev
  region: eu-west-1

  iamRoleStatements:
    - Effect: Allow
      Action:
        - dynamodb:Query
        - dynamodb:Scan
        - dynamodb:GetItem
        - dynamodb:PutItem
      Resource: "arn:aws:dynamodb:${self:provider.region}:*:table/${ssm:/${opt:stage, self:provider.stage}/dynamodb/candidates}"
    
    - Effect: Allow
      Action:
        - ssm:GetParameter
      Resource: "arn:aws:ssm:${self:provider.region}:*:parameter/${opt:stage, self:provider.stage}/dynamodb/candidates"

  environment:
    stage: ${opt:stage, self:provider.stage}

package:
  include:
  exclude:
  individually: true

functions:
  candidateSubmission:
    handler: api/candidate-submit.execute
    memorySize: 128
    description: Submit candidate information and starts interview process.
    events:
      - http: 
          path: candidates
          method: post

  listCandidates:
    handler: api/candidate-list.execute
    memorySize: 128
    description: List all candidates
    events:
      - http:
          path: candidates
          method: get

  getCandidateDetails:
    handler: api/candidate-get.execute
    memorySize: 128
    description: Get specific candidate details
    events:
      - http:
          path: candidates/{id}
          method: get

custom:
  webpack:
    webpackConfig: 'webpack.config.js'
    includeModules: false
    packager: 'npm'

plugins:
  - serverless-offline
  - serverless-webpack